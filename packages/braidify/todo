Todos:
 x Blank Line
   - Alter sendVersion so that it knows to set actual headers if this isn't a
     stream
 x Reproduce error with callback called multiple times
 x Canonicalize the range patch format
 x Remove hard-coded content-type and merge-type
   x JSON: Range Unit and Parse/Stringify
 x Pass through the options into braid_fetch
   x And remove the independent AbortController
 x nodejs fetches
 x Refactor parser code
   x Split the parser into parse_version(), parse_header(), parse_body(), with
     functional style
   x Call parse() from each library's streaming API in a loop of its style
 x Add support for node.http
 x Convert promises to async/await
 x Re-introduce browser fetch() and node_fetch()
   x Test reconnections in catch with browser fetch()
     x Make andThen error if not subscription request
     x Make onClose work from the catch()
 x Add 'for await' support for fetch
 x Publish to NPM
 x Move the parse state variables into function parameters and return values
 x Redesign directory structure
 - Writeup readme
 - Move the headers into a .headers field in API?
 - Websocket fallback for localhost development
 - Support arbitrary custom patch types
 - Error handling, debugging info and reporting
   - Like the on_error callback
   - And the handler passed to parse_response in client
   - Better debug info logging
 - Add to spec "should not limit client connections" if some header is present
 - Handle binary response in client


Test on seph's code:

  (do a checkout of joesphg/braid-protocol, then run yarn in the root
  directory of that repository then `node server.js` from examples/1)


Feedback on fetch:
 - `andThen` -> `subscribe` or `onVersion` or `updates`
 - Could be good to do `fetch().then().andThen()` to know when the initial response is ready
 - Could add a middle-lever helper to handler the fetch().then() stream, rather than the high-level .andThen thing
    - This is like a getVersions() or getUpdates() function
 - Want a script tag that doesn't modify fetch()
 - Promises allow multiple listeners to attach `.then()`s. Does andThen allow this?


Feedback on http:
 - `.http` isn't consistent with `'https'`. Maybe try a different name.
 - Unease about extending existing APIs but rather separate APIs that can be helpers

